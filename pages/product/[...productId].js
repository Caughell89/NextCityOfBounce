import Head from "next/head";
import { useEffect, useState, useRef } from "react";
import { useRouter } from "next/router";
import { Button, DatePicker, Breadcrumb, Carousel } from "antd";
import { getTwoToneColor, setTwoToneColor } from "@ant-design/icons";
import {
  HomeOutlined,
  LeftCircleTwoTone,
  RightCircleTwoTone,
} from "@ant-design/icons";
import styles from "../../styles/Product.less";
import Link from "next/link";
import LoadingIndicator from "../../components/LoadingIndicator";
import globals from "../../styles/globals.less";
import {
  getItem,
  getCompanyById,
  sendMessage,
  getItemBlockedDates,
} from "../../util/API";

export default function Product() {
  const router = useRouter();
  const [loading, setLoading] = useState(true);
  const [product, setProduct] = useState({});
  const [company, setCompany] = useState({});
  const [blockedDates, setBlockedDates] = useState([]);
  const [activePhoto, setActivePhoto] = useState();

  setTwoToneColor("#1cacc8");

  const carouselRef = useRef(null);
  const loadItem = () => {
    setLoading(true);
    console.log(router.query.productId);
    if (router.query.productId === undefined) {
      console.log("waiting for route");
    } else {
      getItem(parseInt(router.query.productId))
        .then((response) => {
          console.log(response);
          setProduct(response);
          setActivePhoto(response.productPhotos[0]);

          getCompanyById(parseInt(response.companyId))
            .then((response) => {
              setCompany(response);
              setLoading(false);
            })
            .catch((error) => {
              console.log(
                (error && error.message) ||
                  alert("Oops! Something went wrong. Please try again!")
              );
            });
          getItemBlockedDates(response.productId)
            .then((dates) => {
              setBlockedDates(dates);
            })
            .catch((error) => {
              console.log(error);
            });
        })
        .catch((error) => {
          alert(
            (error && error.message) ||
              alert("Oops! Something went wrong. Please try again!")
          );
        });
    }
  };

  useEffect(() => {
    console.log("use effect causing pull of new data");
    loadItem();
  }, [router.query.productId]);

  const contentStyle = {
    width: "100%",
    height: "auto",
    color: "#fff",
  };

  return (
    <div>
      <Head>
        <title>Product - City of Bounce</title>
        <meta
          property="og:title"
          content={"Party Rentals | Bounce Houses | Tents - City of Bounce"}
        />
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={globals.content}>
        {loading ? (
          <LoadingIndicator />
        ) : (
          <>
            <Breadcrumb>
              <Breadcrumb.Item>
                <Link href="/">
                  <HomeOutlined />
                </Link>
              </Breadcrumb.Item>
              <Breadcrumb.Item
                onClick={() => {
                  router.back();
                }}
              >
                <a>Search</a>
              </Breadcrumb.Item>
            </Breadcrumb>
            <div className={styles.content}>
              <div className={styles.photos}>
                <div className={styles.activePhoto}>
                  <img
                    src={product.productPhotos[0]}
                    alt={product.productName}
                  />
                </div>
                <div className={styles.gallery}>
                  {product.productPhotos.map((photo, index) => {
                    return <div key={index}><img src={photo} alt={product.productName + "-"+index}/></div>
                  })}
                </div>
              </div>

              <div>
                <div className={styles.checkoutCol}>
                  <div className="bold a">{product.productName}</div>
                  <div>Reviews</div>
                  <div>Price</div>
                  <div>Location</div>
                  <div>Date</div>
                  <div>Appointment</div>
                  <button>Add to Cart</button>

                </div>
              </div>
            </div>
          </>
        )}
      </div>
     
     
    </div>
  );
}
